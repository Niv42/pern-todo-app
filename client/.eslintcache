[{"C:\\Users\\Reuth\\Documents\\Niv\\web\\React Apps\\pern-todo-app\\client\\src\\index.js":"1","C:\\Users\\Reuth\\Documents\\Niv\\web\\React Apps\\pern-todo-app\\client\\src\\App.js":"2","C:\\Users\\Reuth\\Documents\\Niv\\web\\React Apps\\pern-todo-app\\client\\src\\components\\InputTodo.js":"3","C:\\Users\\Reuth\\Documents\\Niv\\web\\React Apps\\pern-todo-app\\client\\src\\components\\ListTodos.js":"4","C:\\Users\\Reuth\\Documents\\Niv\\web\\React Apps\\pern-todo-app\\client\\src\\components\\EditTodo.js":"5"},{"size":219,"mtime":1609961306013,"results":"6","hashOfConfig":"7"},{"size":294,"mtime":1609966746569,"results":"8","hashOfConfig":"7"},{"size":1009,"mtime":1609965135676,"results":"9","hashOfConfig":"7"},{"size":1878,"mtime":1609965014349,"results":"10","hashOfConfig":"7"},{"size":2448,"mtime":1609964808321,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"gndcru",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"14"},"C:\\Users\\Reuth\\Documents\\Niv\\web\\React Apps\\pern-todo-app\\client\\src\\index.js",[],["25","26"],"C:\\Users\\Reuth\\Documents\\Niv\\web\\React Apps\\pern-todo-app\\client\\src\\App.js",[],"C:\\Users\\Reuth\\Documents\\Niv\\web\\React Apps\\pern-todo-app\\client\\src\\components\\InputTodo.js",["27"],"C:\\Users\\Reuth\\Documents\\Niv\\web\\React Apps\\pern-todo-app\\client\\src\\components\\ListTodos.js",["28"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport EditTodo from './EditTodo';\r\n\r\nconst ListTodos = () => {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  // delete a todo\r\n  const deleteTodo = async (id) => {\r\n    try {\r\n      const deleteTodo = await fetch(`http://localhost:5000/todos/${id}`, {\r\n        method: 'DELETE',\r\n      });\r\n      setTodos(todos.filter((todo) => todo.todo_id !== id));\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  // get all todos\r\n  const getTodos = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/todos');\r\n      const jsonData = await response.json();\r\n\r\n      setTodos(jsonData);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTodos();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <table className='table table-striped mt-5 text-center'>\r\n        <thead>\r\n          <tr>\r\n            <th>Description</th>\r\n            <th>Edit</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {/* <tr>\r\n            <td>John</td>\r\n            <td>Doe</td>\r\n            <td>john@example.com</td>\r\n          </tr>          */}\r\n          {todos.map((todo) => {\r\n            const { todo_id, description } = todo;\r\n            return (\r\n              <tr key={todo_id}>\r\n                <td>{description}</td>\r\n                <td>\r\n                  <EditTodo todo={todo} />\r\n                </td>\r\n                <td>\r\n                  <button\r\n                    className='btn btn-danger'\r\n                    onClick={() => deleteTodo(todo_id)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListTodos;\r\n","C:\\Users\\Reuth\\Documents\\Niv\\web\\React Apps\\pern-todo-app\\client\\src\\components\\EditTodo.js",["29"],"import React, { useState } from 'react';\r\n\r\nconst EditTodo = ({ todo }) => {\r\n  const [description, setDescription] = useState(todo.description);\r\n\r\n  // Edit desc function\r\n  const updateDescription = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = { description };\r\n      const response = await fetch(\r\n        `http://localhost:5000/todos/${todo.todo_id}`,\r\n        {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n\r\n      window.location = '/';\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        type='button'\r\n        className='btn btn-warning'\r\n        data-toggle='modal'\r\n        data-target={`#id${todo.todo_id}`}\r\n      >\r\n        Edit\r\n      </button>\r\n\r\n      <div\r\n        onClick={() => setDescription(todo.description)}\r\n        className='modal'\r\n        id={`id${todo.todo_id}`}\r\n      >\r\n        <div className='modal-dialog'>\r\n          <div className='modal-content'>\r\n            <div className='modal-header'>\r\n              <h4 className='modal-title'>Edit todo</h4>\r\n              <button\r\n                type='button'\r\n                onClick={() => setDescription(todo.description)}\r\n                className='close'\r\n                data-dismiss='modal'\r\n              >\r\n                &times;\r\n              </button>\r\n            </div>\r\n\r\n            <div className='modal-body'>\r\n              <input\r\n                type='text'\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                className='form-control'\r\n                value={description}\r\n              />\r\n            </div>\r\n\r\n            <div className='modal-footer'>\r\n              <button\r\n                type='button'\r\n                className='btn btn-warning'\r\n                data-dismiss='modal'\r\n                onClick={(e) => updateDescription(e)}\r\n              >\r\n                Edit\r\n              </button>\r\n              <button\r\n                type='button'\r\n                className='btn btn-danger'\r\n                data-dismiss='modal'\r\n                onClick={() => setDescription(todo.description)}\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditTodo;\r\n",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":10,"column":13,"nodeType":"36","messageId":"37","endLine":10,"endColumn":21},{"ruleId":"34","severity":1,"message":"38","line":11,"column":13,"nodeType":"36","messageId":"37","endLine":11,"endColumn":23},{"ruleId":"34","severity":1,"message":"35","line":11,"column":13,"nodeType":"36","messageId":"37","endLine":11,"endColumn":21},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'deleteTodo' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]